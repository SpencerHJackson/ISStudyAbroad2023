// <auto-generated />
using System;
using ISStudyAbroad2023.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ISStudyAbroad2023.Migrations
{
    [DbContext(typeof(StudentDbContext))]
    partial class StudentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("ISStudyAbroad2023.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.HasKey("CityId");

                    b.ToTable("Citys");
                });

            modelBuilder.Entity("ISStudyAbroad2023.Models.CityActivity", b =>
                {
                    b.Property<int>("CityActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CityActivityDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("CityActivityLocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("CityActivityName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EventId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CityActivityId");

                    b.HasIndex("CityId");

                    b.HasIndex("EventId");

                    b.ToTable("CityActivities");
                });

            modelBuilder.Entity("ISStudyAbroad2023.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CityActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CommentId");

                    b.HasIndex("CityActivityId");

                    b.HasIndex("EventId");

                    b.HasIndex("StudentId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ISStudyAbroad2023.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("INTEGER");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("ISStudyAbroad2023.Models.Quote", b =>
                {
                    b.Property<int>("QuoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuoteAuthor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("QuoteText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("QuoteId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("ISStudyAbroad2023.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastCheckin")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId");

                    b.HasIndex("EventId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ISStudyAbroad2023.Models.Thought", b =>
                {
                    b.Property<int>("ThoughtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ThoughtDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ThoughtId");

                    b.HasIndex("StudentId");

                    b.ToTable("Thoughts");
                });

            modelBuilder.Entity("ISStudyAbroad2023.Models.CityActivity", b =>
                {
                    b.HasOne("ISStudyAbroad2023.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ISStudyAbroad2023.Models.Event", null)
                        .WithMany("CityActivities")
                        .HasForeignKey("EventId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("ISStudyAbroad2023.Models.Comment", b =>
                {
                    b.HasOne("ISStudyAbroad2023.Models.CityActivity", null)
                        .WithMany("Comments")
                        .HasForeignKey("CityActivityId");

                    b.HasOne("ISStudyAbroad2023.Models.Event", null)
                        .WithMany("Comments")
                        .HasForeignKey("EventId");

                    b.HasOne("ISStudyAbroad2023.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ISStudyAbroad2023.Models.Student", b =>
                {
                    b.HasOne("ISStudyAbroad2023.Models.Event", null)
                        .WithMany("Students")
                        .HasForeignKey("EventId");
                });

            modelBuilder.Entity("ISStudyAbroad2023.Models.Thought", b =>
                {
                    b.HasOne("ISStudyAbroad2023.Models.Student", "Person")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ISStudyAbroad2023.Models.CityActivity", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("ISStudyAbroad2023.Models.Event", b =>
                {
                    b.Navigation("CityActivities");

                    b.Navigation("Comments");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
